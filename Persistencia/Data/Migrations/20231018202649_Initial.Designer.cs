// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(VeterinariaContext))]
    [Migration("20231018202649_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Citas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("Fecha");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time")
                        .HasColumnName("Hora");

                    b.Property<int>("IdMascota")
                        .HasColumnType("int");

                    b.Property<int>("IdVeterinariaFK")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Motivo");

                    b.HasKey("Id");

                    b.HasIndex("IdMascota");

                    b.HasIndex("IdVeterinariaFK");

                    b.ToTable("Cita", (string)null);
                });

            modelBuilder.Entity("Dominio.DetalleMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<int>("IdMovMedicFK")
                        .HasColumnType("int");

                    b.Property<int>("IdProductoFK")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal")
                        .HasColumnName("Precio");

                    b.HasKey("Id");

                    b.HasIndex("IdMovMedicFK");

                    b.HasIndex("IdProductoFK");

                    b.ToTable("DetalleMovimiento", (string)null);
                });

            modelBuilder.Entity("Dominio.Especies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Especies", (string)null);
                });

            modelBuilder.Entity("Dominio.Laboratorios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Laboratorios", (string)null);
                });

            modelBuilder.Entity("Dominio.Mascotas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("FechaNacimiento");

                    b.Property<int>("IdEspecieFK")
                        .HasColumnType("int");

                    b.Property<int>("IdPropietarioFK")
                        .HasColumnType("int");

                    b.Property<int>("IdRazaFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecieFK");

                    b.HasIndex("IdPropietarioFK");

                    b.HasIndex("IdRazaFK");

                    b.ToTable("Mascotas", (string)null);
                });

            modelBuilder.Entity("Dominio.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int")
                        .HasColumnName("CantidadDisponible");

                    b.Property<int>("IdLaboratorioFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal")
                        .HasColumnName("Precio");

                    b.HasKey("Id");

                    b.HasIndex("IdLaboratorioFK");

                    b.ToTable("Medicamento", (string)null);
                });

            modelBuilder.Entity("Dominio.MedicamentoProveedores", b =>
                {
                    b.Property<int>("IdProveedorFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamnetoFK")
                        .HasColumnType("int");

                    b.HasKey("IdProveedorFK", "IdMedicamnetoFK");

                    b.HasIndex("IdMedicamnetoFK");

                    b.ToTable("MedicamentoProveedores", (string)null);
                });

            modelBuilder.Entity("Dominio.MovimientoMedic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("Cantidad");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("Fecha");

                    b.Property<int>("IdProductoFK")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoMovimientoFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProductoFK");

                    b.HasIndex("IdTipoMovimientoFK");

                    b.ToTable("MovimientoMedic", (string)null);
                });

            modelBuilder.Entity("Dominio.Propietario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Mail")
                        .HasComment("Correo Usuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre")
                        .HasComment("Nombre Usuario");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono")
                        .HasComment("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Propietario", (string)null);
                });

            modelBuilder.Entity("Dominio.Proveedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Direccion")
                        .HasComment("Direccion Usuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre")
                        .HasComment("Nombre Usuario");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono")
                        .HasComment("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Proveedores", (string)null);
                });

            modelBuilder.Entity("Dominio.Razas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<int>("IdEspecieFK")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.HasKey("Id");

                    b.HasIndex("IdEspecieFK");

                    b.ToTable("Raza", (string)null);
                });

            modelBuilder.Entity("Dominio.RolUsuarios", b =>
                {
                    b.Property<int>("IdUserFK")
                        .HasColumnType("int");

                    b.Property<int>("IdRolFK")
                        .HasColumnType("int");

                    b.HasKey("IdUserFK", "IdRolFK");

                    b.HasIndex("IdRolFK");

                    b.ToTable("RolUsuarios", (string)null);
                });

            modelBuilder.Entity("Dominio.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoMovimineto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Descripcion");

                    b.HasKey("Id");

                    b.ToTable("TipoMovimineto", (string)null);
                });

            modelBuilder.Entity("Dominio.TratamientosMedicos", b =>
                {
                    b.Property<int>("Id")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Dosis");

                    b.Property<DateOnly>("FechaAdministracion")
                        .HasColumnType("date")
                        .HasColumnName("FechaAdministracion");

                    b.Property<int>("IdCitaFK")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicamentoFK")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Observacion");

                    b.HasKey("Id");

                    b.HasIndex("IdMedicamentoFK");

                    b.ToTable("TratamientosMedicos", (string)null);
                });

            modelBuilder.Entity("Dominio.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("Varchar")
                        .HasColumnName("Contraseña")
                        .HasComment("Contraseña");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Mail")
                        .HasComment("Correo Usuario");

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Dominio.Veterinario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Correo");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar")
                        .HasColumnName("Especialidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("Veterinario", (string)null);
                });

            modelBuilder.Entity("Dominio.Citas", b =>
                {
                    b.HasOne("Dominio.Mascotas", "Mascota")
                        .WithMany("Citas")
                        .HasForeignKey("IdMascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Veterinario", "Veterinarios")
                        .WithMany("Cits")
                        .HasForeignKey("IdVeterinariaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Veterinarios");
                });

            modelBuilder.Entity("Dominio.DetalleMovimiento", b =>
                {
                    b.HasOne("Dominio.MovimientoMedic", "MovimientoMedics")
                        .WithMany("DetalleMovimientos")
                        .HasForeignKey("IdMovMedicFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Medicamento", "Medicamentos")
                        .WithMany("DetalleMovimientos")
                        .HasForeignKey("IdProductoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamentos");

                    b.Navigation("MovimientoMedics");
                });

            modelBuilder.Entity("Dominio.Mascotas", b =>
                {
                    b.HasOne("Dominio.Especies", "Especie")
                        .WithMany("Mascotas")
                        .HasForeignKey("IdEspecieFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Propietario", "Propietarios")
                        .WithMany("Mascots")
                        .HasForeignKey("IdPropietarioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Razas", "Raza")
                        .WithMany("Mascots")
                        .HasForeignKey("IdRazaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("Propietarios");

                    b.Navigation("Raza");
                });

            modelBuilder.Entity("Dominio.Medicamento", b =>
                {
                    b.HasOne("Dominio.Laboratorios", "Laboratorio")
                        .WithMany("Medicamentos")
                        .HasForeignKey("IdLaboratorioFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("Dominio.MedicamentoProveedores", b =>
                {
                    b.HasOne("Dominio.Medicamento", "Medicamentos")
                        .WithMany("MedicamentoProveedors")
                        .HasForeignKey("IdMedicamnetoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Proveedores", "Proveedor")
                        .WithMany("MedicamentoProveedors")
                        .HasForeignKey("IdProveedorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamentos");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Dominio.MovimientoMedic", b =>
                {
                    b.HasOne("Dominio.Medicamento", "Medicamentos")
                        .WithMany("MovimientoMedics")
                        .HasForeignKey("IdProductoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TipoMovimineto", "TipoMovimientos")
                        .WithMany("MovimientoMedics")
                        .HasForeignKey("IdTipoMovimientoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicamentos");

                    b.Navigation("TipoMovimientos");
                });

            modelBuilder.Entity("Dominio.Razas", b =>
                {
                    b.HasOne("Dominio.Especies", "Especie")
                        .WithMany("Razas")
                        .HasForeignKey("IdEspecieFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("Dominio.RolUsuarios", b =>
                {
                    b.HasOne("Dominio.Roles", "Rol")
                        .WithMany("RolUsers")
                        .HasForeignKey("IdRolFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Usuarios", "Usuario")
                        .WithMany("RolUsers")
                        .HasForeignKey("IdUserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Dominio.TratamientosMedicos", b =>
                {
                    b.HasOne("Dominio.Citas", "Cita")
                        .WithMany("TratamientosMedicos")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Medicamento", "Medicamento")
                        .WithMany("TratamientosMedics")
                        .HasForeignKey("IdMedicamentoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Medicamento");
                });

            modelBuilder.Entity("Dominio.Citas", b =>
                {
                    b.Navigation("TratamientosMedicos");
                });

            modelBuilder.Entity("Dominio.Especies", b =>
                {
                    b.Navigation("Mascotas");

                    b.Navigation("Razas");
                });

            modelBuilder.Entity("Dominio.Laboratorios", b =>
                {
                    b.Navigation("Medicamentos");
                });

            modelBuilder.Entity("Dominio.Mascotas", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("Dominio.Medicamento", b =>
                {
                    b.Navigation("DetalleMovimientos");

                    b.Navigation("MedicamentoProveedors");

                    b.Navigation("MovimientoMedics");

                    b.Navigation("TratamientosMedics");
                });

            modelBuilder.Entity("Dominio.MovimientoMedic", b =>
                {
                    b.Navigation("DetalleMovimientos");
                });

            modelBuilder.Entity("Dominio.Propietario", b =>
                {
                    b.Navigation("Mascots");
                });

            modelBuilder.Entity("Dominio.Proveedores", b =>
                {
                    b.Navigation("MedicamentoProveedors");
                });

            modelBuilder.Entity("Dominio.Razas", b =>
                {
                    b.Navigation("Mascots");
                });

            modelBuilder.Entity("Dominio.Roles", b =>
                {
                    b.Navigation("RolUsers");
                });

            modelBuilder.Entity("Dominio.TipoMovimineto", b =>
                {
                    b.Navigation("MovimientoMedics");
                });

            modelBuilder.Entity("Dominio.Usuarios", b =>
                {
                    b.Navigation("RolUsers");
                });

            modelBuilder.Entity("Dominio.Veterinario", b =>
                {
                    b.Navigation("Cits");
                });
#pragma warning restore 612, 618
        }
    }
}
